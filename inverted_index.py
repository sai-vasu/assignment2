# -*- coding: utf-8 -*-
"""inverted_index

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1bMf1hLWp46Dra7qgg4wlUEoM5vfbR9wS
"""

from mrjob.job import MRJob
import re

class InvertedIndex(MRJob):

    def configure_args(self):
        super(InvertedIndex, self).configure_args()
        self.add_file_arg('--stopwords', help='Path to stopwords file')

    def mapper_init(self):
        # Load stopwords from the provided file
        self.stopwords = set()
        with open(self.options.stopwords, 'r') as f:
            for line in f:
                self.stopwords.add(line.strip())

    def mapper(self, _, line):
        # Split the input line into document ID and text
        parts = line.strip().split(': ')
        if len(parts) != 2:
            return

        doc_id, text = parts[0], parts[1]

        # Extract words and clean them
        words = re.findall(r'\w+', text.lower())

        for word in words:
            if word not in self.stopwords:
                yield word, doc_id

    def reducer(self, key, values):
        documents = list(set(values))
        yield key, documents

if __name__ == '__main__':
    InvertedIndex.run()